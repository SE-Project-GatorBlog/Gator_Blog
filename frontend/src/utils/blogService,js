// utils/blogService.js
import api from './api';

const BASE_URL = 'http://localhost:8000/api';

const blogService = {
  // Get all blogs, optionally filtered by title
  getAllBlogs: async (titleFilter = '') => {
    try {
      const url = titleFilter 
        ? `${BASE_URL}/blogs?title=${encodeURIComponent(titleFilter)}` 
        : `${BASE_URL}/blogs`;
      
      const response = await api.fetch(url);
      return await response.json();
    } catch (error) {
      console.error('Error fetching blogs:', error);
      throw error;
    }
  },
  
  // Get a single blog by ID
  getBlogById: async (id) => {
    try {
      const response = await api.fetch(`${BASE_URL}/blogs/${id}`);
      return await response.json();
    } catch (error) {
      console.error(`Error fetching blog with ID ${id}:`, error);
      throw error;
    }
  },
  
  // Create a new blog
  createBlog: async (blogData) => {
    try {
      const response = await api.fetch(`${BASE_URL}/blogs`, {
        method: 'POST',
        body: JSON.stringify(blogData)
      });
      return await response.json();
    } catch (error) {
      console.error('Error creating blog:', error);
      throw error;
    }
  },
  
  // Update an existing blog
  updateBlog: async (id, blogData) => {
    try {
      const response = await api.fetch(`${BASE_URL}/blogs/${id}`, {
        method: 'PUT',
        body: JSON.stringify(blogData)
      });
      return await response.json();
    } catch (error) {
      console.error(`Error updating blog with ID ${id}:`, error);
      throw error;
    }
  },
  
  // Delete a blog
  deleteBlog: async (id) => {
    try {
      const response = await api.fetch(`${BASE_URL}/blogs/${id}`, {
        method: 'DELETE'
      });
      return await response.json();
    } catch (error) {
      console.error(`Error deleting blog with ID ${id}:`, error);
      throw error;
    }
  }
};

export default blogService;